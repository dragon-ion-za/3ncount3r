name: API CD

on:
  workflow_dispatch:

env:
  NEXT_VERSION: ''
  ARTIFACT_NAME: 'api'

jobs:
  build:
    uses: ./.github/workflows/step_build.yml
    with:
      sourcePath: "api"
      artifactName: "api"

  tagAndVersion:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      nextVersion: ${{ steps.createTagName.outputs.nextVersion }}
    steps:
      - name: Create Tag Name
        id: createTagName
        shell: pwsh
        run: |
          Function Get-OrdinalNumber {
              Param(
                  [Parameter(Mandatory=$true)]
                  [int64]$num
              )

              $Suffix = Switch -regex ($Num) {
                  '1(1|2|3)$' { 'th'; break }
                  '.?1$'      { 'st'; break }
                  '.?2$'      { 'nd'; break }
                  '.?3$'      { 'rd'; break }
                  default     { 'th'; break }
              }
              Write-Output "$Num$Suffix"
          }

          echo Variables          
          $last_tag = "${{ needs.build.outputs.lastTag }}"
          $version_name = "${{ needs.build.outputs.versionName }}"
          $last_tag
          $version_name

          echo GenerateNextVersion
          if ($last_tag.IndexOf('-') -eq -1 -Or $last_tag.IndexOf($version_name) -eq -1) { 
            $versionOrdinalNumber = Get-OrdinalNumber(1)
          }

          if ($last_tag.IndexOf($version_name) -ge 0) { 
            $last_tag -match '-(\d*)\w\wlevel'
            $versionOrdinalNumber = Get-OrdinalNumber([int]$matches[1] + 1)
          }

          echo "NEXT_VERSION=$version_name-${versionOrdinalNumber}Level" >> $env:GITHUB_ENV
          echo "nextVersion=${{ env.NEXT_VERSION }}" >> $env:GITHUB_OUTPUT
          echo ${{ env.NEXT_VERSION }}

      - name: Create tag
        if: ${{ !env.ACT }}
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.NEXT_VERSION }}',
              sha: context.sha
            })

  dockerImage:
    needs: [ tagAndVersion ]
    runs-on: ubuntu-latest
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Build Image
        run: docker build . --file "api/dockerfile" --tag "3ncount3r-api:${{ needs.tagAndVersion.outputs.nextVersion }}"

